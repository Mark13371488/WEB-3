{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/customer-add/customer-add.component.css","webpack:///./src/app/components/customer-add/customer-add.component.html","webpack:///./src/app/components/customer-add/customer-add.component.ts","webpack:///./src/app/components/customer-details/customer-details.component.css","webpack:///./src/app/components/customer-details/customer-details.component.html","webpack:///./src/app/components/customer-details/customer-details.component.ts","webpack:///./src/app/components/customer/customer.component.css","webpack:///./src/app/components/customer/customer.component.html","webpack:///./src/app/components/customer/customer.component.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/performer-add/performer-add.component.css","webpack:///./src/app/components/performer-add/performer-add.component.html","webpack:///./src/app/components/performer-add/performer-add.component.ts","webpack:///./src/app/components/performer-details/performer-details.component.css","webpack:///./src/app/components/performer-details/performer-details.component.html","webpack:///./src/app/components/performer-details/performer-details.component.ts","webpack:///./src/app/components/performers/performers.component.css","webpack:///./src/app/components/performers/performers.component.html","webpack:///./src/app/components/performers/performers.component.ts","webpack:///./src/app/components/project-add/project-add.component.css","webpack:///./src/app/components/project-add/project-add.component.html","webpack:///./src/app/components/project-add/project-add.component.ts","webpack:///./src/app/components/project-details/project-details.component.css","webpack:///./src/app/components/project-details/project-details.component.html","webpack:///./src/app/components/project-details/project-details.component.ts","webpack:///./src/app/components/projects/projects.component.css","webpack:///./src/app/components/projects/projects.component.html","webpack:///./src/app/components/projects/projects.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/models/Customer.ts","webpack:///./src/app/models/Performer.ts","webpack:///./src/app/models/Project.ts","webpack:///./src/app/services/customers.service.ts","webpack:///./src/app/services/message.service.ts","webpack:///./src/app/services/performers.service.ts","webpack:///./src/app/services/projects.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from \"@angular/router\";\nimport {ProjectsComponent} from \"./components/projects/projects.component\";\nimport {PerformersComponent} from \"./components/performers/performers.component\";\nimport {CustomerComponent} from \"./components/customer/customer.component\";\n//import {ProjectInProgressComponent} from \"./components/projectinproress/projectinproress.component\";\n\nconst routes: Routes = [\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'performers', component: PerformersComponent },\n  { path: 'customers', component: CustomerComponent },\n//  { path: 'projectOnStations', component: ProjectInProgressComponent}\n\n]\n\n@NgModule({\n  exports: [\n    RouterModule\n  ],\n  imports: [\n    RouterModule.forRoot(routes)\n  ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"/* AppComponent's private CSS styles */\\nh1 {\\n    font-size: 1.2em;\\n    margin-bottom: 0;\\n}\\nh2 {\\n    font-size: 2em;\\n    margin-top: 0;\\n    padding-top: 0;\\n}\\nnav a {\\n    padding: 5px 10px;\\n    text-decoration: none;\\n    margin-top: 10px;\\n    display: inline-block;\\n    background-color: #eee;\\n    border-radius: 4px;\\n}\\nnav a:visited, a:link {\\n    color: #334953;\\n}\\nnav a:hover {\\n    color: #039be5;\\n    background-color: #cfd8dc;\\n}\\nnav a.active {\\n    color: #039be5;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0NBQXNDO0FBQ3RDO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksY0FBYztJQUNkLGFBQWE7SUFDYixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksY0FBYztBQUNsQjtBQUNBO0lBQ0ksY0FBYztJQUNkLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQXBwQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXG5oMSB7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuaDIge1xuICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG59XG5uYXYgYSB7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxubmF2IGE6dmlzaXRlZCwgYTpsaW5rIHtcbiAgICBjb2xvcjogIzMzNDk1Mztcbn1cbm5hdiBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzAzOWJlNTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2ZkOGRjO1xufVxubmF2IGEuYWN0aXZlIHtcbiAgICBjb2xvcjogIzAzOWJlNTtcbn1cbiJdfQ== */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <router-outlet></router-outlet>\\n      <app-messages></app-messages>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Lab4';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ProjectsComponent } from './components/projects/projects.component';\nimport { ProjectAddComponent } from './components/project-add/project-add.component';\nimport { ProjectDetailsComponent } from './components/project-details/project-details.component';\nimport { PerformersComponent } from './components/performers/performers.component';\nimport { PerformerAddComponent } from './components/performer-add/performer-add.component';\nimport { PerformerDetailsComponent } from './components/performer-details/performer-details.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { CustomerAddComponent } from './components/customer-add/customer-add.component';\nimport { CustomerDetailsComponent } from './components/customer-details/customer-details.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessagesComponent,\n    HeaderComponent,\n    ProjectsComponent,\n    ProjectAddComponent,\n    ProjectDetailsComponent,\n    PerformersComponent,\n    PerformerAddComponent,\n    PerformerDetailsComponent,\n    CustomerComponent,\n    CustomerAddComponent,\n    CustomerDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tZXItYWRkL2N1c3RvbWVyLWFkZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h3>Add Customer</h3>\\n<form>\\n\\n  <label for=\\\"customerId\\\">id:\\n    <input #customerId type=\\\"number\\\" name=\\\"customerId\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"customerName\\\">name:\\n    <input #customerName type=\\\"text\\\" name=\\\"customerName\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"customerBudget\\\">budget:\\n    <input #customerBudget type=\\\"number\\\" name=\\\"customerBudget\\\" required>\\n  </label><br>\\n\\n  <button (click)=\\\"addCustomer(customerId.value,customerName.value,customerBudget.value)\\\">Add</button>\\n</form>\\n\"","import { Component, OnInit, Output, EventEmitter  } from '@angular/core';\nimport { Customer } from \"../../models/Customer\";\nimport { CustomersService } from '../../services/customers.service';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-customer-add',\n  templateUrl: './customer-add.component.html',\n  styleUrls: ['./customer-add.component.css']\n})\nexport class CustomerAddComponent implements OnInit {\n\n  @Output()\n  changed = new EventEmitter();\n\n  constructor(private customersService: CustomersService, private messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  addCustomer(id: number, name: string, budget: number) {\n    let newCustomer = new Customer(id, name, budget);\n    this.customersService.addCustomer(newCustomer).subscribe(response => {\n      this.messageService.add(response);\n      this.change();\n    });\n  }\n\n  private change() {\n    this.changed.emit();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tZXItZGV0YWlscy9jdXN0b21lci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"customer\\\">\\n  <h2>Customer details</h2>\\n  <form>\\n\\n    <label for=\\\"customerId\\\">id:\\n      <input #customerId type=\\\"number\\\" name=\\\"customerId\\\" required disabled value={{customer.id}}>\\n    </label><br>\\n\\n    <label for=\\\"customerName\\\">name:\\n      <input #customerName type=\\\"text\\\" name=\\\"customerName\\\" required disabled value={{customer.name}}>\\n    </label><br>\\n\\n    <label for=\\\"customerBudget\\\">budget:\\n      <input #customerBudget type=\\\"number\\\" name=\\\"customerBudget\\\" required value={{customer.budget}}>\\n    </label><br>\\n\\n    <button (click)=\\\"editCustomer(customerId.value,customerName.value,customerBudget.value)\\\">Edit</button>\\n    <button (click)=\\\"deleteCustomer(customer)\\\">Delete</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Customer } from \"../../models/Customer\";\nimport { CustomersService } from '../../services/customers.service';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  @Input()\n  customer: Customer;\n  @Output()\n  changed = new EventEmitter();\n\n  constructor(private customersService: CustomersService,\n              private messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  editCustomer(id: number, name: string, budget: number) {\n    let editedCustomer = new Customer(id, name, budget);\n    this.customersService.editCustomers(editedCustomer).subscribe(response => {\n      this.messageService.add(response);\n      this.customer = editedCustomer;\n      this.change();\n    });\n  }\n\n  deleteCustomer(customer: Customer) {\n    this.customersService.deleteCustomer(customer).subscribe(response => {\n      this.messageService.add(response);\n      this.customer = undefined;\n      this.change();\n    });\n  }\n\n  change() {\n    this.changed.emit();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-customer-add (changed)=\\\"getCustomers()\\\">\\n\\n</app-customer-add>\\n<h2>Customers</h2>\\n<ul class=\\\"customers\\\">\\n  <li *ngFor=\\\"let customer of customers\\\" [class.selected]=\\\"customer === selectedCustomer\\\" (click)=\\\"onSelect(customer)\\\">\\n    <span class=\\\"badge\\\">{{customer.id}}</span> {{customer.name}} {{customer.budget}}\\n  </li>\\n</ul>\\n\\n<app-customer-details [customer]=\\\"selectedCustomer\\\" (changed)=\\\"getCustomers()\\\">\\n\\n</app-customer-details>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CustomersService } from \"../../services/customers.service\";\nimport { Customer } from '../../models/Customer';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  customers: Customer[];\n\n  selectedCustomer: Customer;\n\n  constructor(private customersService: CustomersService) { }\n\n  ngOnInit() {\n    this.getCustomers();\n  }\n\n  getCustomers() {\n    this.customersService.getCustomers().subscribe(customers => this.customers = customers);\n  }\n\n  onSelect(customer: Customer) {\n    this.customersService.getCustomer(customer.id).subscribe(customer => this.selectedCustomer = customer);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Agensy</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/customers\\\">Customers</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/performers\\\">Performers</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/projects\\\">Projects</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/projectsInProgress\\\">Projects In Progress</a>\\n      </li>\\n\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGVyZm9ybWVyLWFkZC9wZXJmb3JtZXItYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>Add Performer</h3>\\n<form>\\n\\n  <label for=\\\"performerId\\\">id:\\n    <input #performerId type=\\\"number\\\" name=\\\"performerId\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"performerNumber\\\">number:\\n    <input #performerNumber type=\\\"number\\\" name=\\\"performerNumber\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"performerExperience\\\">experience:\\n    <input #performerExperience type=\\\"number\\\" name=\\\"performerExperience\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"performerWorkers\\\">workers:\\n    <input #performerWorkers type=\\\"number\\\" name=\\\"performerWorkers\\\" required>\\n  </label><br>\\n\\n  <button (click)=\\\"addPerformer(performerId.value,performerNumber.value,performerExperience.value,performerWorkers.value)\\\">Add</button>\\n</form>\\n\"","import { Component, OnInit, Output, EventEmitter  } from '@angular/core';\nimport { Performer } from \"../../models/Performer\";\nimport { PerformersService } from '../../services/performers.service';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-performer-add',\n  templateUrl: './performer-add.component.html',\n  styleUrls: ['./performer-add.component.css']\n})\nexport class PerformerAddComponent implements OnInit {\n\n  @Output()\n  changed = new EventEmitter();\n\n  constructor(private performersService: PerformersService, private messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  addPerformer(id: number, number: number, experience: number, workers: number) {\n    let newPerformer = new Performer(id, number, experience, workers);\n    this.performersService.addPerformer(newPerformer).subscribe(response => {\n      this.messageService.add(response);\n      this.change();\n    });\n  }\n\n  private change() {\n    this.changed.emit();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGVyZm9ybWVyLWRldGFpbHMvcGVyZm9ybWVyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"performer\\\">\\n  <h2>Performer details</h2>\\n  <form>\\n\\n    <label for=\\\"performerId\\\">id:\\n      <input #performerId type=\\\"number\\\" name=\\\"performerId\\\" required disabled value={{performer.id}}>\\n    </label><br>\\n\\n    <label for=\\\"performerNumber\\\">number:\\n      <input #performerNumber type=\\\"number\\\" name=\\\"performerNumber\\\" required disabled value={{performer.number}}>\\n    </label><br>\\n\\n    <label for=\\\"performerExperience\\\">experience:\\n      <input #performerExperience type=\\\"number\\\" name=\\\"performerExperience\\\" required value={{performer.experience}}>\\n    </label><br>\\n\\n    <label for=\\\"performerWorkers\\\">workers:\\n      <input #performerWorkers type=\\\"number\\\" name=\\\"performerWorkers\\\" required value={{performer.workers}}>\\n    </label><br>\\n\\n    <button (click)=\\\"editPerformer(performerId.value,performerNumber.value,performerExperience.value,performerWorkers.value)\\\">Edit</button>\\n    <button (click)=\\\"deletePerformer(performer)\\\">Delete</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Performer } from \"../../models/Performer\";\nimport { PerformersService } from '../../services/performers.service';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-performer-details',\n  templateUrl: './performer-details.component.html',\n  styleUrls: ['./performer-details.component.css']\n})\nexport class PerformerDetailsComponent implements OnInit {\n\n  @Input()\n  performer: Performer;\n  @Output()\n  changed = new EventEmitter();\n\n  constructor(private performersService: PerformersService,\n              private messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  editPerformer(id: number, number: number, experience: number, workers: number) {\n    let editedPerformer = new Performer(id, number, experience, workers);\n    this.performersService.editPerformers(editedPerformer).subscribe(response => {\n      this.messageService.add(response);\n      this.performer = editedPerformer;\n      this.change();\n    });\n  }\n\n  deletePerformer(performer: Performer) {\n    this.performersService.deletePerformer(performer).subscribe(response => {\n      this.messageService.add(response);\n      this.performer = undefined;\n      this.change();\n    });\n  }\n\n  change() {\n    this.changed.emit();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGVyZm9ybWVycy9wZXJmb3JtZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-performer-add (changed)=\\\"getPerformers()\\\">\\n\\n</app-performer-add>\\n<h2>Performers</h2>\\n<ul class=\\\"performers\\\">\\n  <li *ngFor=\\\"let performer of performers\\\" [class.selected]=\\\"performer === selectedPerformer\\\" (click)=\\\"onSelect(performer)\\\">\\n    <span class=\\\"badge\\\">{{performer.id}}</span> {{performer.number}} {{performer.experience}} {{performer.workers}}\\n  </li>\\n</ul>\\n\\n<app-performer-details [performer]=\\\"selectedPerformer\\\" (changed)=\\\"getPerformers()\\\">\\n\\n</app-performer-details>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PerformersService } from \"../../services/performers.service\";\nimport { Performer } from '../../models/Performer';\n\n@Component({\n  selector: 'app-performers',\n  templateUrl: './performers.component.html',\n  styleUrls: ['./performers.component.css']\n})\nexport class PerformersComponent implements OnInit {\n\n  performers: Performer[];\n\n  selectedPerformer: Performer;\n\n  constructor(private performersService: PerformersService) { }\n\n  ngOnInit() {\n    this.getPerformers();\n  }\n\n  getPerformers() {\n    this.performersService.getPerformers().subscribe(performers => this.performers = performers);\n  }\n\n  onSelect(performer: Performer) {\n    this.performersService.getPerformer(performer.id).subscribe(performer => this.selectedPerformer = performer);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvamVjdC1hZGQvcHJvamVjdC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3>Add Project</h3>\\n<form>\\n\\n  <label for=\\\"projectId\\\">id:\\n    <input #projectId type=\\\"number\\\" name=\\\"projectId\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"projectName\\\">name:\\n    <input #projectName type=\\\"text\\\" name=\\\"projectName\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"projectDescription\\\">description:\\n    <input #projectDescription type=\\\"text\\\" name=\\\"projectDescription\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"projectCustomer\\\">customer:\\n    <input #projectCustomer type=\\\"text\\\" name=\\\"projectCustomer\\\" required>\\n  </label><br>\\n\\n  <label for=\\\"projectSkill\\\">skill:\\n    <input #projectSkill type=\\\"number\\\" name=\\\"projectSkill\\\" required>\\n  </label><br>\\n\\n  <button (click)=\\\"addProject(projectId.value,projectName.value,projectDescription.value,projectCustomer.value,projectSkill.value)\\\">Add</button>\\n</form>\\n\"","import { Component, OnInit, Output, EventEmitter  } from '@angular/core';\nimport { Project } from \"../../models/Project\";\nimport { ProjectsService } from '../../services/projects.service';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-project-add',\n  templateUrl: './project-add.component.html',\n  styleUrls: ['./project-add.component.css']\n})\nexport class ProjectAddComponent implements OnInit {\n\n  @Output()\n  changed = new EventEmitter();\n\n  constructor(private projectsService: ProjectsService, private messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  addProject(id: number, name: string, description: string, customer: string, skill: number) {\n    let newProject = new Project(id,name,description,customer,skill);\n    this.projectsService.addProject(newProject).subscribe(response => {\n      this.messageService.add(response);\n      this.change();\n    });\n  }\n\n  private change() {\n    this.changed.emit();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvamVjdC1kZXRhaWxzL3Byb2plY3QtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"project\\\">\\n  <h2>Project details</h2>\\n  <form>\\n\\n    <label for=\\\"projectId\\\">id:\\n      <input #projectId type=\\\"number\\\" name=\\\"projectId\\\" required disabled value={{project.id}}>\\n    </label><br>\\n\\n    <label for=\\\"projectName\\\">name:\\n      <input #projectName type=\\\"text\\\" name=\\\"projectName\\\" required value={{project.name}}>\\n    </label><br>\\n\\n    <label for=\\\"projectDescription\\\">description:\\n      <input #projectDescription type=\\\"text\\\" name=\\\"projectDescription\\\" required disabled value={{project.Description}}>\\n    </label><br>\\n\\n    <label for=\\\"projectCustomer\\\">customer:\\n      <input #projectCustomer type=\\\"text\\\" name=\\\"projectCustomer\\\" required value={{project.customer}}>\\n    </label><br>\\n\\n    <label for=\\\"projectSkill\\\">skill:\\n      <input #projectSkill type=\\\"number\\\" name=\\\"projectSkill\\\" required value={{project.skill}}>\\n    </label><br>\\n\\n    <button (click)=\\\"editProject(projectId.value,projectName.value,projectDescription.value,projectCustomer.value,projectSkill.value)\\\">Edit</button>\\n    <button (click)=\\\"deleteProject(project)\\\">Delete</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Project } from \"../../models/Project\";\nimport { ProjectsService } from '../../services/projects.service';\nimport { MessageService } from '../../services/message.service';\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.css']\n})\nexport class ProjectDetailsComponent implements OnInit {\n\n  @Input()\n  project: Project;\n  @Output()\n  changed = new EventEmitter();\n\n  constructor(private projectsService: ProjectsService,\n              private messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  editProject(id: number, name: string, description: string, customer: string, skill: number) {\n    let editedProject = new Project(id, name, description, customer, skill);\n    this.projectsService.editProjects(editedProject).subscribe(response => {\n      this.messageService.add(response);\n      this.project = editedProject;\n      this.change();\n    });\n  }\n\n  deleteProject(project: Project) {\n    this.projectsService.deleteProject(project).subscribe(response => {\n      this.messageService.add(response);\n      this.project = undefined;\n      this.change();\n    });\n  }\n\n  change() {\n    this.changed.emit();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvamVjdHMvcHJvamVjdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-project-add (changed)=\\\"getProjects()\\\">\\n\\n</app-project-add>\\n<h2>Projects</h2>\\n<ul class=\\\"projects\\\">\\n  <li *ngFor=\\\"let project of projects\\\" [class.selected]=\\\"project === selectedProject\\\" (click)=\\\"onSelect(project)\\\">\\n    <span class=\\\"badge\\\">{{project.id}}</span> {{project.name}} {{project.description}} {{project.customer}} {{project.skill}}\\n  </li>\\n</ul>\\n\\n<app-project-details [project]=\\\"selectedProject\\\" (changed)=\\\"getProjects()\\\">\\n\\n</app-project-details>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectsService } from \"../../services/projects.service\";\nimport { Project } from '../../models/Project';\n\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n\n  projects: Project[];\n\n  selectedProject: Project;\n\n  constructor(private projectsService: ProjectsService) { }\n\n  ngOnInit() {\n    this.getProjects();\n  }\n\n  getProjects() {\n    this.projectsService.getProjects().subscribe(projects => this.projects = projects);\n  }\n\n  onSelect(project: Project) {\n    this.projectsService.getProject(project.id).subscribe(project => this.selectedProject = project);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from \"../services/message.service\";\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Customer {\n  id: number;\n  name: string;\n  budget: number\n\n  constructor(id: number, name: string, budget: number) {\n    this.id = id;\n    this.name = name;\n    this.budget = budget;\n  }\n}\n","export class Performer {\n  id: number;\n  number: number;\n  experience: number;\n  workers: number\n\n  constructor(id: number, number: number, experience: number, workers: number) {\n    this.id = id;\n    this.number = number;\n    this.experience = experience;\n    this.workers = workers;\n  }\n}\n","export class Project {\n  id: number;\n  name: string;\n  description: string;\n  customer: string;\n  skill: number;\n\n  constructor(id: number, name: string, description: string, customer: string, skill: number) {\n    this.id = id;\n    this.name = name;\n    this.description = description;\n    this.customer = customer;\n    this.skill = skill;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Customer } from '../models/Customer';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from \"./message.service\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CustomersService {\n\n  private customersUrl = `http://localhost:3000/customers`;\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  getCustomers(): Observable<Customer[]> {\n    this.log(`Fetch all customers`);\n    return this.http.get<Customer[]>(this.customersUrl);\n  }\n\n  getCustomer(id: number): Observable<Customer> {\n    this.log(`Fetch customer with id ${id}`);\n    return this.http.get<Customer>(`${this.customersUrl}/${id}`);\n  }\n\n  addCustomer(customer: Customer): Observable<string> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', ['application/json']);\n    this.log(`Add customer with id ${customer.id}`);\n    return this.http.post(`${this.customersUrl}`, customer, {headers: headers, responseType: 'text'});\n  }\n\n  editCustomers(customer: Customer): Observable<string> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', ['application/json']);\n    this.log(`Edit customer with id ${customer.id}`);\n    return this.http.put(`${this.customersUrl}`, customer, {headers: headers, responseType: 'text'});\n  }\n\n  deleteCustomer(customer: Customer): Observable<string> {\n    this.log(`Delete customer with id ${customer.id}`);\n    return this.http.delete(`${this.customersUrl}/${customer.id}`, {responseType: \"text\"});\n  }\n\n  private log(message) {\n    this.messageService.add(`CustomersService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Performer } from '../models/Performer';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from \"./message.service\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PerformersService {\n\n  private performersUrl = `http://localhost:3000/performers`;\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  getPerformers(): Observable<Performer[]> {\n    this.log(`Fetch all performers`);\n    return this.http.get<Performer[]>(this.performersUrl);\n  }\n\n  getPerformer(id: number): Observable<Performer> {\n    this.log(`Fetch performer with id ${id}`);\n    return this.http.get<Performer>(`${this.performersUrl}/${id}`);\n  }\n\n  addPerformer(performer: Performer): Observable<string> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', ['application/json']);\n    this.log(`Add performer with id ${performer.id}`);\n    return this.http.post(`${this.performersUrl}`, performer, {headers: headers, responseType: 'text'});\n  }\n\n  editPerformers(performer: Performer): Observable<string> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', ['application/json']);\n    this.log(`Edit performer with id ${performer.id}`);\n    return this.http.put(`${this.performersUrl}`, performer, {headers: headers, responseType: 'text'});\n  }\n\n  deletePerformer(performer: Performer): Observable<string> {\n    this.log(`Delete performer with id ${performer.id}`);\n    return this.http.delete(`${this.performersUrl}/${performer.id}`, {responseType: \"text\"});\n  }\n\n  private log(message) {\n    this.messageService.add(`PerformersService: ${message}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Project } from '../models/Project';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from \"./message.service\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProjectsService {\n\n  private projectsUrl = `http://localhost:3000/projects`;\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  getProjects(): Observable<Project[]> {\n    this.log(`Fetch all projects`);\n    return this.http.get<Project[]>(this.projectsUrl);\n  }\n\n  getProject(id: number): Observable<Project> {\n    this.log(`Fetch project with id ${id}`);\n    return this.http.get<Project>(`${this.projectsUrl}/${id}`);\n  }\n\n  addProject(project: Project): Observable<string> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', ['application/json']);\n    this.log(`Add project with id ${project.id}`);\n    return this.http.post(`${this.projectsUrl}`, project, {headers: headers, responseType: 'text'});\n  }\n\n  editProjects(project: Project): Observable<string> {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', ['application/json']);\n    this.log(`Edit project with id ${project.id}`);\n    return this.http.put(`${this.projectsUrl}`, project, {headers: headers, responseType: 'text'});\n  }\n\n  deleteProject(project: Project): Observable<string> {\n    this.log(`Delete project with id ${project.id}`);\n    return this.http.delete(`${this.projectsUrl}/${project.id}`, {responseType: \"text\"});\n  }\n\n  private log(message) {\n    this.messageService.add(`ProjectsService: ${message}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}